{"version":3,"sources":["store/actions.js","components/taskEditor/taskEditor.js","assets/favicon.ico","components/task/task.js","container/Tasks/Tasks.js","App.js","reportWebVitals.js","store/reducer.js","index.js","components/task/task.module.css","container/Tasks/Tasks.module.css","App.module.css","components/taskEditor/taskEditor.module.css"],"names":["LOGIN","ADD_TASK","taskEditor","props","console","log","taskDetails","assigned_user","showDelete","buttonDirection","deleteHandler","display","flexDirection","className","styles","TaskEditor","TaskLabel","htmlFor","id","type","onChange","event","descHandler","value","task_msg","DateTime","DatePicker","selected","task_date","date","dateHandler","step","TimePicker","time","timeHandler","task_time","Buttons","style","onClick","SaveCancel","cancelled","saved","task","date1","split","Task","src","user_icon","alt","Details","editOptions","editTypeHandler","Button","res","alert","Tasks","state","is_completed","task_id","newState","Date","timeInSeconds","getHours","getMinutes","user","selectedTask","taskList","filter","setTimeout","setState","target","taskSaveHandler","preventDefault","getFullYear","getMonth","toString","padStart","getDate","method","fetch","headers","token","body","JSON","stringify","time_zone","then","response","json","out","getAllTasks","catch","err","cancelHandler","data","results","onGetAllTask","componentDidMount","this","TasksCounter","TasksCount","length","TasksButton","map","index","Component","connect","numOfTasks","maxId","showTaskEditor","pageRefresh","refresh","dispatch","tasks","onAddTask","actionTypes","name","onDelTask","App","onLogin","userId","getToken","getUserId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","sortedList","sort","a","b","parse","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0a35050a.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\";\r\nexport const GETALL = \"GETALL\";\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const DEL_TASK = 'DEL_TASK';","import React from 'react';\r\nimport styles from './taskEditor.module.css';\r\n\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst taskEditor = (props) => {\r\n    console.log(\"TaskEditor entered \", props.taskDetails)\r\n    console.log(\"User \",props.taskDetails.assigned_user)\r\n    let showDelete = {}\r\n    let buttonDirection={}\r\n    if(!props.deleteHandler){\r\n        showDelete = {\r\n            display: \"none\"\r\n        }\r\n        buttonDirection={\r\n            flexDirection: \"row-reverse\"\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <form className={styles.TaskEditor}>\r\n                <div className={styles.TaskLabel}>\r\n                    <label htmlFor=\"task_msg\">Task Description</label>\r\n                <input id=\"task_msg\" type='text' onChange={(event)=>props.descHandler(event)} value={props.taskDetails.task_msg}/>\r\n                </div>\r\n                <div className={styles.DateTime}>\r\n                    <div className={styles.TaskLabel}>\r\n                    <label htmlFor=\"task_date\">Date</label>\r\n                    <i className=\"far fa-calendar-alt\"></i>\r\n                    <DatePicker id=\"task_date\" className={styles.DatePicker} selected={props.taskDetails.task_date} onChange={date => props.dateHandler(date)} />\r\n                    </div>\r\n                    <div className={styles.TaskLabel}>\r\n                    <label htmlFor=\"task_time\">Time</label>\r\n                    <i className=\"far fa-clock\"></i>\r\n                    <TimePicker id=\"task_time\" step={30} className={styles.TimePicker} onChange={(time) => props.timeHandler(time)} value={props.taskDetails.task_time}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                <div className={styles.TaskLabel}>\r\n                <label htmlFor=\"user\">Assign User</label>\r\n                <select id=\"user\">\r\n                    <option value={props.taskDetails.assigned_user}>{props.taskDetails.assigned_user}</option>\r\n                </select>\r\n                </div>\r\n                </div>\r\n                <div className={styles.Buttons} style={buttonDirection}>\r\n                    <i className=\"far fa-trash-alt\" onClick={props.deleteHandler} style={showDelete}></i>\r\n                    {/* <button onClick={props.deleteHandler} style={showDelete}>Delete</button> */}\r\n                    <div className={styles.SaveCancel}>\r\n                    <span onClick={props.cancelled}>Cancel</span>\r\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={props.saved}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default taskEditor;","export default __webpack_public_path__ + \"static/media/favicon.4fe75d5f.ico\";","import React from 'react';\r\nimport image from '../../../src/assets/favicon.ico';\r\n\r\nimport styles from './task.module.css';\r\n\r\nconst task = (props) => {\r\n    let date1 = props.task.task_date.split(\"-\");\r\n    console.log(\"Task \",date1)\r\n    // let year =  props.task.task_date.splice(0, 4);\r\n    // let month = props.task.task_date.getMonth().splice(1, 2) + 1;\r\n    // let day= props.task.task_date.getDate().splice(1,2);\r\n    let date = date1[2] + \"/\" + date1[1] + \"/\" + date1[0]\r\n    return(<div className={styles.Task}>\r\n        <img src={props.task.user_icon} alt=\"Image\"></img>\r\n        <div className={styles.Details}>\r\n            <span className={styles.task_msg}>{props.task.task_msg}</span>\r\n            <span>{date}</span>\r\n        </div>\r\n        <div className={styles.editOptions}>\r\n        <i className={\"fas fa-pen\"} onClick={() => props.editTypeHandler(\"edit\", props.task.id)} ></i>\r\n        {/* <button className={styles.Button} onClick={() => props.editTypeHandler(\"edit\", props.task.id)}>Edit</button> */}\r\n        <div className={styles.Button}>\r\n            <i className=\"fas fa-bell\"></i>\r\n            <i className=\"fas fa-check\" onClick={(event)=>{\r\n                let res=alert(\"Mark this task as complete!\");\r\n                props.saved(event,res)\r\n            }}></i>\r\n        </div>\r\n        </div>\r\n        \r\n\r\n            {/* <input type='text' defaultValue={props.task.task_msg} />\r\n            <input type='text' defaultValue={props.task.task_date}/>\r\n            <input type='text' defaultValue={props.task.task_time} />\r\n            <button onClick={() => props.editTypeHandler(\"edit\", props.task.id)}>Edit</button> */}\r\n            {/* <button onClick={(event) => props.completedHandler(event, task.id)}>Is Completed</button> */}\r\n    </div>)\r\n}\r\n\r\nexport default task;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Tasks.module.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nimport * as actionTypes from '../../store/actions';\r\nimport TaskEditor from '../../components/taskEditor/taskEditor';\r\n// import Task from '../../components/task/task';\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\nimport DatePicker from 'react-datepicker';\r\nimport Task from '../../components/task/task';\r\n\r\nclass Tasks extends Component {\r\n    state={\r\n        type: null,\r\n        assigned_user: null,\r\n        id: null,\r\n        task_msg: '',\r\n        task_date: '',\r\n        task_time: '',\r\n        is_completed: 0,\r\n    }\r\n    editTypeHandler=(type, task_id=null)=>{\r\n        // const newState = JSON.parse(JSON.stringify(this.state));\r\n        const newState = {}\r\n        newState.type=type\r\n        if(type === \"new\"){\r\n            let date = new Date()\r\n            let timeInSeconds= date.getHours()*3600 + date.getMinutes()*60;\r\n            newState.task_msg=\"Follow up\"\r\n            newState.task_date = date\r\n            newState.task_time = timeInSeconds\r\n            newState.is_completed= 0\r\n            newState.assigned_user=this.props.user;\r\n        }\r\n        if(type === \"edit\"){\r\n            console.log(\"Edit task\", task_id)\r\n            const selectedTask = this.props.taskList.filter(task => task.id === task_id)\r\n            console.log(selectedTask)\r\n            newState.task_msg = selectedTask[0].task_msg;\r\n            newState.task_date = new Date(selectedTask[0].task_date);\r\n            newState.task_time = selectedTask[0].task_time;\r\n            newState.is_completed = selectedTask[0].is_completed;\r\n            newState.assigned_user = selectedTask[0].assigned_user;\r\n        }\r\n        setTimeout(this.setState({...newState, id: task_id}),4000);\r\n    }\r\n    descHandler = (event) =>{\r\n        this.setState({\r\n            task_msg: event.target.value\r\n        })\r\n    }\r\n    dateHandler = (date) => { this. setState({task_date: date})}\r\n    timeHandler = (time) => { this.setState({task_time: time})}\r\n    taskSaveHandler=(event)=>{\r\n        event.preventDefault();\r\n        let year =  this.state.task_date.getFullYear();\r\n        let month = (this.state.task_date.getMonth()+1).toString().padStart(2,0);\r\n        let day= this.state.task_date.getDate().toString().padStart(2,0);\r\n        let date = year + \"-\" + month + \"-\" + day;\r\n        console.log(\"date \", date)\r\n        let task_id = '';\r\n        let method = \"POST\";\r\n        if (this.state.type === \"edit\"){\r\n            method = \"PUT\";\r\n            task_id = \"/\" + this.state.id;\r\n            console.log(\"url\",task_id)\r\n        }\r\n        fetch(\"https://stage.api.sloovi.com/task/lead_58be137bfde045e7a0c8d107783c4598\"+ task_id,{\r\n            method: method,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + this.props.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                assigned_user:  this.props.user, \r\n                task_date: date,\r\n                task_time: this.state.task_time,\r\n                is_completed: this.state.is_completed,\r\n\t\t        time_zone: 19800,\r\n                task_msg: this.state.task_msg\r\n            })\r\n        }).then(response=>{\r\n            console.log(response)\r\n            response.json().then(out => {\r\n                console.log(out)\r\n                this.setState({type: null,\r\n                    assigned_user: null,\r\n                    id: null,\r\n                    task_msg: '',\r\n                    task_date: '',\r\n                    task_time: '',\r\n                    is_completed: 0,})\r\n                this.getAllTasks()\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    cancelHandler = () => {\r\n        this.setState({type: null,\r\n            assigned_user: null,\r\n            id: null,\r\n            task_msg: '',\r\n            task_date: '',\r\n            task_time: '',\r\n            is_completed: 0,})\r\n        this.getAllTasks();\r\n    }\r\n\r\n    deleteHandler = (event) => {\r\n        event.preventDefault();\r\n        let id = this.state.id;\r\n        console.log(\"delete id \" , id)\r\n        fetch(\"https://stage.api.sloovi.com/task/lead_58be137bfde045e7a0c8d107783c4598/\" + id , {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Authorization': 'Bearer ' + this.props.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            response.json().then(out => {\r\n                console.log(out)\r\n                this.getAllTasks()\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllTasks = () =>{\r\n        fetch(\"https://stage.api.sloovi.com/task/lead_58be137bfde045e7a0c8d107783c4598\",{\r\n            method: 'GET',\r\n            headers:  {\r\n            'Authorization': 'Bearer ' + this.props.token,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            response.json().then(data=>{\r\n                    console.log(data.results)\r\n                    this.props.onGetAllTask(data.results)\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.getAllTasks();\r\n    }\r\n    render(){\r\n        console.log(\"Tasks.js \", this.state)\r\n        let taskEditor = null;\r\n        if(this.state.type === \"new\"){\r\n            taskEditor = <TaskEditor taskDetails={this.state}\r\n                descHandler={this.descHandler}\r\n                dateHandler={this.dateHandler}\r\n                timeHandler={this.timeHandler}\r\n                saved={this.taskSaveHandler}\r\n                cancelled={this.cancelHandler}/> ;\r\n            }\r\n        return(\r\n            <div className={styles.Tasks}>\r\n                <div className={styles.TasksCounter}>\r\n                    <div className={styles.TasksCount}>TASKS <span>{this.props.taskList.length}</span></div>\r\n                    <div className={styles.TasksButton} onClick={()=>this.editTypeHandler(\"new\")}>+</div>\r\n                </div>\r\n                {taskEditor}\r\n                {this.props.taskList.map((task, index) => {\r\n                    if(this.state.id !== task.id){\r\n                        return(\r\n                            <div key={task.id} >\r\n                                {/* <input type='text' defaultValue={task.task_msg} />\r\n                                <input type='text' defaultValue={task.task_date}/>\r\n                                <input type='text' defaultValue={task.task_time} />\r\n                                <button onClick={() => this.editTypeHandler(\"edit\", task.id)}>Edit</button>\r\n                                <button onClick={(event) => this.deleteHandler(event, task.id)}>Delete</button> */}\r\n                                <Task editTypeHandler={this.editTypeHandler} saved={this.taskSaveHandler} task={task}/>\r\n                            </div>\r\n                    )}\r\n                    // if(this.state.index === index)\r\n                    else if(this.state.type === \"edit\"){\r\n                        return(\r\n                            <div key={task.id}>\r\n                            <TaskEditor taskDetails={this.state}\r\n                        descHandler={this.descHandler}\r\n                        dateHandler={this.dateHandler}\r\n                        timeHandler={this.timeHandler}\r\n                        saved={this.taskSaveHandler}\r\n                        cancelled={this.cancelHandler}\r\n                        deleteHandler={this.deleteHandler}/>\r\n                        </div>\r\n                        )\r\n                        }\r\n                }\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        user: state.user,\r\n        token: state.token,\r\n        taskList: state.taskList,\r\n        numOfTasks: state.maxId,\r\n        showTaskEditor: state.showTaskEditor,\r\n        pageRefresh: state.refresh\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onGetAllTask: (tasks) => dispatch({type: actionTypes.GETALL, tasks: tasks}),\r\n        onAddTask: () => dispatch({type: actionTypes.ADD_TASK, task: {name: \"Puagzh\"}}),\r\n        onDelTask: () => dispatch({type: actionTypes.DEL_TASK})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);\r\n// export default Tasks;","import React , { Component } from 'react';\nimport styles from './App.module.css';\nimport { connect } from 'react-redux';\n\nimport Tasks from './container/Tasks/Tasks';\nimport * as actionTypes from './store/actions';\n\nclass App extends Component{\n  /* componentDidMount() {\n    fetch(\"https://stage.api.sloovi.com/login\",{\n      method : 'POST',\n      headers : {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',          \n      },\n      body : JSON.stringify({\n          email : 'smithcheryl@yahoo.com',\n          password : '12345678',\n        })\n    })\n      .then(response => {\n        if(response.ok){\n          // console.log(response.json())\n          return response.json();\n        }\n        else{\n          response.json().then((err) => {\n            throw new Error(err);\n          })\n        }\n      })\n      .then(res =>{\n        fetch(\"https://stage.api.sloovi.com/user\",{\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + res.results.token,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json', \n          }\n        })\n        .then(response => {\n          // console.log(response)\n          response.json().then(data => {\n            // console.log(res, data)\n            this.props.onLogin(res, data)})\n        })\n        // this.props.onLogin(res)\n      })\n      .catch(error => {\n        alert(error);\n      })\n  } */\n  render(){\n    return (\n      <div className={styles.App}>\n        {/* <button >Login</button> */}\n        <Tasks/>\n      </div>\n    );\n  }\n  \n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onLogin: (token, userId) => dispatch({type: actionTypes.LOGIN, getToken: token, getUserId: userId})\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from './actions';\r\n\r\nconst initialState = {\r\n    user: 'user_979f2358c7554c809d0d688943b8966b',\r\n    token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjE2MTg1ODEsIm5iZiI6MTYyMTYxODU4MSwianRpIjoiZWVhMDIxMjMtNDg1MC00ZjJhLTg0YzEtYmM2ZjgxYTZiYzdkIiwiaWRlbnRpdHkiOnsibmFtZSI6IlNhcmF2YW5hbiAyMyBUZXN0aW5nIiwiZW1haWwiOiJzbWl0aGNoZXJ5bEB5YWhvby5jb20iLCJ1c2VyX2lkIjoidXNlcl85NzlmMjM1OGM3NTU0YzgwOWQwZDY4ODk0M2I4OTY2YiIsImNvbXBhbnlfaWQiOiJjb21wYW55X2RmMTUzNTU4NGE4YzRjNmE5OGZjOTM5Y2UxMDVjMWE2IiwiaWNvbiI6Imh0dHBzOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvYWRlNTIwN2Q1YjQyYzVkYTU5NWVkZDc4MTg5ZDc3MTciLCJieV9kZWZhdWx0Ijoib3V0cmVhY2gifSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.dU1KnrYa9d56nsZq6_9DZoDzZ5eP1WTFuvr2O_K7tQI',\r\n    taskList: [],\r\n    refresh: false\r\n}\r\n\r\nconst reducer = (state=initialState, action) =>{\r\n    switch (action.type){\r\n        case actionTypes.ADD_TASK:\r\n            return state;\r\n        case actionTypes.LOGIN:\r\n            console.log(\"Reducer\", action.getToken.results.token)\r\n            console.log(\"Reducer\", action.getUserId.results.id)\r\n            return{\r\n                ...state,\r\n                token: action.getToken.results.token,\r\n                user: action.getUserId.results.id\r\n            }\r\n        case \"GETALL\":\r\n            const sortedList=action.tasks.sort((a,b)=> {\r\n                console.log((Date.parse(new Date(b.task_date)) + b.task_time) - (Date.parse(new Date(a.task_date)) + a.task_time))\r\n                return (Date.parse(new Date(b.task_date)) + b.task_time) - (Date.parse(new Date(a.task_date)) + a.task_time)\r\n            })\r\n            // const sortedList = action.tasks.sort((a, b) => b.task_date > a.task_date && b.task_time > a.task_time)\r\n            return{\r\n                ...state,\r\n                taskList: sortedList,\r\n                refresh: !state.refresh\r\n            }\r\n        }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"task_Task__2g_rc\",\"Details\":\"task_Details__3mlOM\",\"task_msg\":\"task_task_msg__2E3jE\",\"editOptions\":\"task_editOptions__3MiGV\",\"Button\":\"task_Button__30Apq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TasksCounter\":\"Tasks_TasksCounter__17UsH\",\"TasksCount\":\"Tasks_TasksCount__3JZon\",\"TasksButton\":\"Tasks_TasksButton__PhRg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Y8ULG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"taskEditor_TaskEditor__ETElb\",\"TaskLabel\":\"taskEditor_TaskLabel__zPz8n\",\"DateTime\":\"taskEditor_DateTime__1SQdk\",\"Buttons\":\"taskEditor_Buttons__3qvaZ\",\"SaveCancel\":\"taskEditor_SaveCancel__1UUAG\",\"DatePicker\":\"taskEditor_DatePicker__3GF1O\",\"TimePicker\":\"taskEditor_TimePicker__3sx1Q\"};"],"sourceRoot":""}