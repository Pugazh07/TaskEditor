{"version":3,"sources":["store/actions.js","components/taskEditor/taskEditor.js","components/task/task.js","container/Tasks/Tasks.js","App.js","reportWebVitals.js","store/reducer.js","index.js","components/task/task.module.css","container/Tasks/Tasks.module.css","App.module.css","components/taskEditor/taskEditor.module.css"],"names":["LOGIN","GET_ALL_TASKS","GET_USERS","connect","state","users","userList","props","console","log","taskDetails","assigned_user","showDelete","buttonDirection","deleteHandler","display","flexDirection","map","user","value","id","name","className","styles","TaskEditor","TaskLabel","htmlFor","type","onChange","event","descHandler","onFocus","target","select","autoFocus","task_msg","DateTime","DatePicker","selected","task_date","date","dateHandler","step","TimePicker","time","timeHandler","task_time","defaultValue","userAssignHandler","Buttons","style","onClick","SaveCancel","cancelled","saved","task","date1","split","Task","src","user_icon","alt","Details","editOptions","editTypeHandler","Button","alert","Tasks","is_completed","task_id","newState","Date","timeInSeconds","getHours","getMinutes","selectedTask","taskList","filter","setTimeout","setState","taskSaveHandler","preventDefault","getFullYear","getMonth","toString","padStart","getDate","method","fetch","headers","token","body","JSON","stringify","time_zone","then","response","json","out","getAllTasks","catch","err","cancelHandler","data","results","onGetAllTasks","getAllUsers","res","onGetAllUsers","error","componentDidMount","this","taskEditor","TasksCounter","TasksCount","length","TasksButton","index","Component","dispatch","tasks","actionTypes","onLogin","userId","getToken","getUserId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","taskReducer","action","sortedTaskList","sort","a","b","parse","user_status","store","createStore","reducer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3a0029c2.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\";\r\nexport const GET_ALL_TASKS = \"GET_ALL_TASKS\";\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const DEL_TASK = 'DEL_TASK';\r\nexport const GET_USERS = 'GET_USERS';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './taskEditor.module.css';\r\n\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst taskEditor = (props) => {\r\n    console.log(\"TaskEditor entered \", props.taskDetails)\r\n    console.log(\"User \",props.taskDetails.assigned_user)\r\n    let showDelete = {}\r\n    let buttonDirection={}\r\n    if(!props.deleteHandler){\r\n        showDelete = {\r\n            display: \"none\"\r\n        }\r\n        buttonDirection={\r\n            flexDirection: \"row-reverse\"\r\n        }\r\n    }\r\n\r\n    let userList = []\r\n    console.log(\"Task Editor Users\", props.users);\r\n    if (props.users){\r\n        userList= props.users.map(user => {\r\n            return <option key={user.id} value={user.id}>{user.name}</option>\r\n    })\r\n    }\r\n    return(\r\n        <div>\r\n            <form className={styles.TaskEditor}>\r\n                <div className={styles.TaskLabel}>\r\n                    <label htmlFor=\"task_msg\">Task Description</label>\r\n                <input id=\"task_msg\" type='text' onChange={(event)=>props.descHandler(event)}\r\n                onFocus={(event)=>{\r\n                    event.target.select()\r\n                }} autoFocus value={props.taskDetails.task_msg}/>\r\n                </div>\r\n                <div className={styles.DateTime}>\r\n                    <div className={styles.TaskLabel}>\r\n                    <label htmlFor=\"task_date\">Date</label>\r\n                    <i className=\"far fa-calendar-alt\"></i>\r\n                    <DatePicker id=\"task_date\" className={styles.DatePicker} selected={props.taskDetails.task_date} onChange={date => props.dateHandler(date)} />\r\n                    </div>\r\n                    <div className={styles.TaskLabel}>\r\n                    <label htmlFor=\"task_time\">Time</label>\r\n                    <i className=\"far fa-clock\"></i>\r\n                    <TimePicker id=\"task_time\" step={30} className={styles.TimePicker} onChange={(time) => props.timeHandler(time)} value={props.taskDetails.task_time}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                <div className={styles.TaskLabel}>\r\n                <label htmlFor=\"user\">Assign User</label>\r\n                <select id=\"user\" defaultValue={props.taskDetails.assigned_user} onChange={user => props.userAssignHandler(user)}>\r\n                    {userList}\r\n                </select>\r\n                </div>\r\n                </div>\r\n                <div className={styles.Buttons} style={buttonDirection}>\r\n                    <i className=\"far fa-trash-alt\" onClick={props.deleteHandler} style={showDelete}></i>\r\n                    <div className={styles.SaveCancel}>\r\n                    <span onClick={props.cancelled}>Cancel</span>\r\n                    <button className=\"btn btn-success\" type=\"submit\" onClick={props.saved}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        users: state.userList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(taskEditor);","import React from 'react';\r\n\r\nimport styles from './task.module.css';\r\n\r\nconst task = (props) => {\r\n    let date1 = props.task.task_date.split(\"-\");\r\n    console.log(\"Task \",date1)\r\n    let date = date1[2] + \"/\" + date1[1] + \"/\" + date1[0]\r\n    return(<div className={styles.Task}>\r\n        <img src={props.task.user_icon} alt=\"User\"></img>\r\n        <div className={styles.Details}>\r\n            <span className={styles.task_msg}>{props.task.task_msg}</span>\r\n            <span>{date}</span>\r\n        </div>\r\n        <div className={styles.editOptions}>\r\n        <i className={\"fas fa-pen\"} onClick={() => props.editTypeHandler(\"edit\", props.task.id)} ></i>\r\n        <div className={styles.Button}>\r\n            <i className=\"fas fa-bell\"></i>\r\n            <i className=\"fas fa-check\" onClick={(event)=>{\r\n                let res=alert(\"Mark this task as complete!\");\r\n                // props.saved(event,res)\r\n                console.log(event)\r\n            }}></i>\r\n        </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default task;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Tasks.module.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nimport * as actionTypes from '../../store/actions';\r\nimport TaskEditor from '../../components/taskEditor/taskEditor';\r\nimport Task from '../../components/task/task';\r\n\r\nclass Tasks extends Component {\r\n    state={\r\n        type: null,\r\n        assigned_user: null,\r\n        id: null,\r\n        task_msg: '',\r\n        task_date: '',\r\n        task_time: '',\r\n        is_completed: 0,\r\n    }\r\n    editTypeHandler=(type, task_id=null)=>{\r\n        // const newState = JSON.parse(JSON.stringify(this.state));\r\n        const newState = {}\r\n        newState.type=type\r\n        if(type === \"new\"){\r\n            let date = new Date()\r\n            let timeInSeconds= date.getHours()*3600 + date.getMinutes()*60;\r\n            newState.task_msg=\"Your Task\"\r\n            newState.task_date = date\r\n            newState.task_time = timeInSeconds\r\n            newState.is_completed= 0\r\n            newState.assigned_user=this.props.user;\r\n        }\r\n        if(type === \"edit\"){\r\n            console.log(\"Edit task\", task_id)\r\n            const selectedTask = this.props.taskList.filter(task => task.id === task_id)\r\n            console.log(selectedTask)\r\n            newState.task_msg = selectedTask[0].task_msg;\r\n            newState.task_date = new Date(selectedTask[0].task_date);\r\n            newState.task_time = selectedTask[0].task_time;\r\n            newState.is_completed = selectedTask[0].is_completed;\r\n            newState.assigned_user = selectedTask[0].assigned_user;\r\n        }\r\n        setTimeout(this.setState({...newState, id: task_id}),4000);\r\n    }\r\n    descHandler = (event) =>{\r\n        this.setState({\r\n            task_msg: event.target.value\r\n        })\r\n    }\r\n    dateHandler = (date) => { this.setState({task_date: date})}\r\n    timeHandler = (time) => { this.setState({task_time: time})}\r\n    userAssignHandler = (user) => {\r\n        this.setState({assigned_user: user.target.value});\r\n    }\r\n    taskSaveHandler=(event)=>{\r\n        event.preventDefault();\r\n        let year =  this.state.task_date.getFullYear();\r\n        let month = (this.state.task_date.getMonth()+1).toString().padStart(2,0);\r\n        let day= this.state.task_date.getDate().toString().padStart(2,0);\r\n        let date = year + \"-\" + month + \"-\" + day;\r\n        console.log(\"date \", date)\r\n        let task_id = '';\r\n        let method = \"POST\";\r\n        if (this.state.type === \"edit\"){\r\n            method = \"PUT\";\r\n            task_id = \"/\" + this.state.id;\r\n            console.log(\"url\",task_id)\r\n        }\r\n        fetch(\"https://stage.api.sloovi.com/task/lead_58be137bfde045e7a0c8d107783c4598\"+ task_id,{\r\n            method: method,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + this.props.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                assigned_user:  this.state.assigned_user, \r\n                task_date: date,\r\n                task_time: this.state.task_time,\r\n                is_completed: this.state.is_completed,\r\n\t\t        time_zone: 19800,\r\n                task_msg: this.state.task_msg\r\n            })\r\n        }).then(response=>{\r\n            console.log(\"Save \", response)\r\n            response.json().then(out => {\r\n                console.log(out)\r\n                this.setState({type: null,\r\n                    assigned_user: null,\r\n                    id: null,\r\n                    task_msg: '',\r\n                    task_date: '',\r\n                    task_time: '',\r\n                    is_completed: 0,})\r\n                this.getAllTasks()\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    cancelHandler = () => {\r\n        this.setState({type: null,\r\n            assigned_user: null,\r\n            id: null,\r\n            task_msg: '',\r\n            task_date: '',\r\n            task_time: '',\r\n            is_completed: 0,})\r\n        this.getAllTasks();\r\n    }\r\n\r\n    deleteHandler = (event) => {\r\n        event.preventDefault();\r\n        let id = this.state.id;\r\n        console.log(\"delete id \" , id)\r\n        fetch(\"https://stage.api.sloovi.com/task/lead_58be137bfde045e7a0c8d107783c4598/\" + id , {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Authorization': 'Bearer ' + this.props.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            response.json().then(out => {\r\n                console.log(out)\r\n                this.getAllTasks()\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllTasks = () =>{\r\n        fetch(\"https://stage.api.sloovi.com/task/lead_58be137bfde045e7a0c8d107783c4598\",{\r\n            method: 'GET',\r\n            headers:  {\r\n            'Authorization': 'Bearer ' + this.props.token,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            response.json().then(data=>{\r\n                    console.log(data.results)\r\n                    this.props.onGetAllTasks(data.results)\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllUsers = () =>{\r\n        fetch(\"https://stage.api.sloovi.com/team\",{\r\n            method: 'GET',\r\n            headers:  {\r\n            'Authorization': 'Bearer ' + this.props.token,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            }\r\n        }).then(response =>{\r\n            response.json().then(res=>{\r\n                console.log(res)\r\n                this.props.onGetAllUsers(res.results)\r\n            }).catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.getAllTasks();\r\n        this.getAllUsers();\r\n    }\r\n    render(){\r\n        console.log(\"Tasks.js \", this.state)\r\n        let taskEditor = null;\r\n        if(this.state.type === \"new\"){\r\n            taskEditor = <TaskEditor taskDetails={this.state}\r\n                descHandler={this.descHandler}\r\n                dateHandler={this.dateHandler}\r\n                timeHandler={this.timeHandler}\r\n                userAssignHandler={this.userAssignHandler}\r\n                saved={this.taskSaveHandler}\r\n                cancelled={this.cancelHandler}/> ;\r\n            }\r\n        return(\r\n            <div className={styles.Tasks}>\r\n                <div className={styles.TasksCounter}>\r\n                    <div className={styles.TasksCount}>TASKS <span>{this.props.taskList.length}</span></div>\r\n                    <div className={styles.TasksButton} onClick={()=>this.editTypeHandler(\"new\")}>+</div>\r\n                </div>\r\n                {taskEditor}\r\n                {this.props.taskList.map((task, index) => {\r\n                    if(this.state.id !== task.id){\r\n                        return(\r\n                            <div key={task.id} >\r\n                                <Task editTypeHandler={this.editTypeHandler} saved={this.taskSaveHandler} task={task}/>\r\n                            </div>\r\n                    )}\r\n                    else if(this.state.type === \"edit\"){\r\n                        return(\r\n                            <div key={task.id}>\r\n                                <TaskEditor taskDetails={this.state}\r\n                                descHandler={this.descHandler}\r\n                                dateHandler={this.dateHandler}\r\n                                timeHandler={this.timeHandler}\r\n                                userAssignHandler={this.userAssignHandler}\r\n                                saved={this.taskSaveHandler}\r\n                                cancelled={this.cancelHandler}\r\n                                deleteHandler={this.deleteHandler}/>\r\n                            </div>\r\n                        )\r\n                        }\r\n                }\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        user: state.user,\r\n        token: state.token,\r\n        taskList: state.taskList,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onGetAllTasks: (tasks) => dispatch({type: actionTypes.GET_ALL_TASKS, tasks: tasks}),\r\n        onGetAllUsers: (users) => dispatch({type: actionTypes.GET_USERS, users: users})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);\r\n// export default Tasks;","import React , { useEffect } from 'react';\nimport styles from './App.module.css';\nimport { connect } from 'react-redux';\n\nimport Tasks from './container/Tasks/Tasks';\nimport * as actionTypes from './store/actions';\n\nconst App = (props) => {\n  /* useEffect(() => {\n    fetch(\"https://stage.api.sloovi.com/login\",{\n      method : 'POST',\n      headers : {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',          \n      },\n      body : JSON.stringify({\n          email : 'smithcheryl@yahoo.com',\n          password : '12345678',\n        })\n    })\n      .then(response => {\n        if(response.ok){\n          // console.log(response.json())\n          return response.json();\n        }\n        else{\n          response.json().then((err) => {\n            throw new Error(err);\n          })\n        }\n      })\n      .then(res =>{\n        fetch(\"https://stage.api.sloovi.com/user\",{\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + res.results.token,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json', \n          }\n        })\n        .then(response => {\n          // console.log(response)\n          response.json().then(data => {\n            // console.log(res, data)\n            props.onLogin(res, data)})\n        })\n        // props.onLogin(res)\n      })\n      .catch(error => {\n        alert(error);\n      })\n  }, []) */\n    return (\n      <div className={styles.App}>\n        {/* <button >Login</button> */}\n        <Tasks/>\n      </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onLogin: (token, userId) => dispatch({type: actionTypes.LOGIN, getToken: token, getUserId: userId})\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from './actions';\r\n\r\nconst initialState = {\r\n    user: 'user_979f2358c7554c809d0d688943b8966b',\r\n    token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MjE2MTg1ODEsIm5iZiI6MTYyMTYxODU4MSwianRpIjoiZWVhMDIxMjMtNDg1MC00ZjJhLTg0YzEtYmM2ZjgxYTZiYzdkIiwiaWRlbnRpdHkiOnsibmFtZSI6IlNhcmF2YW5hbiAyMyBUZXN0aW5nIiwiZW1haWwiOiJzbWl0aGNoZXJ5bEB5YWhvby5jb20iLCJ1c2VyX2lkIjoidXNlcl85NzlmMjM1OGM3NTU0YzgwOWQwZDY4ODk0M2I4OTY2YiIsImNvbXBhbnlfaWQiOiJjb21wYW55X2RmMTUzNTU4NGE4YzRjNmE5OGZjOTM5Y2UxMDVjMWE2IiwiaWNvbiI6Imh0dHBzOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvYWRlNTIwN2Q1YjQyYzVkYTU5NWVkZDc4MTg5ZDc3MTciLCJieV9kZWZhdWx0Ijoib3V0cmVhY2gifSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.dU1KnrYa9d56nsZq6_9DZoDzZ5eP1WTFuvr2O_K7tQI',\r\n    taskList: [],\r\n    userList: []\r\n}\r\n\r\nconst taskReducer = (state=initialState, action) =>{\r\n    switch (action.type){\r\n        case actionTypes.LOGIN:\r\n            console.log(\"Reducer\", action.getToken.results.token)\r\n            console.log(\"Reducer\", action.getUserId.results.id)\r\n            return{\r\n                ...state,\r\n                token: action.getToken.results.token,\r\n                user: action.getUserId.results.id\r\n            }\r\n        case actionTypes.GET_ALL_TASKS:\r\n            const sortedTaskList=action.tasks.sort((a,b)=> {\r\n                console.log((Date.parse(new Date(b.task_date)) + b.task_time) - (Date.parse(new Date(a.task_date)) + a.task_time))\r\n                return (Date.parse(new Date(b.task_date)) + b.task_time) - (Date.parse(new Date(a.task_date)) + a.task_time)\r\n            })\r\n            // const sortedList = action.tasks.sort((a, b) => b.task_date > a.task_date && b.task_time > a.task_time)\r\n            return{\r\n                ...state,\r\n                taskList: sortedTaskList,\r\n            }\r\n        case actionTypes.GET_USERS:\r\n            const userList = action.users.filter(user => user.user_status === \"accepted\")\r\n            console.log(userList)\r\n            return{\r\n                ...state,\r\n                userList: userList\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n}\r\n\r\nexport default taskReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"task_Task__2g_rc\",\"Details\":\"task_Details__3mlOM\",\"task_msg\":\"task_task_msg__2E3jE\",\"editOptions\":\"task_editOptions__3MiGV\",\"Button\":\"task_Button__30Apq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TasksCounter\":\"Tasks_TasksCounter__17UsH\",\"TasksCount\":\"Tasks_TasksCount__3JZon\",\"TasksButton\":\"Tasks_TasksButton__PhRg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Y8ULG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"taskEditor_TaskEditor__ETElb\",\"TaskLabel\":\"taskEditor_TaskLabel__zPz8n\",\"DateTime\":\"taskEditor_DateTime__1SQdk\",\"Buttons\":\"taskEditor_Buttons__3qvaZ\",\"SaveCancel\":\"taskEditor_SaveCancel__1UUAG\",\"DatePicker\":\"taskEditor_DatePicker__3GF1O\",\"TimePicker\":\"taskEditor_TimePicker__3sx1Q\"};"],"sourceRoot":""}